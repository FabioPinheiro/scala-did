name: Release

concurrency:
  group: release

on:
  workflow_call:
    inputs:
      release-branch:
        required: false
        type: string
        default: "main"
  workflow_dispatch:
    inputs:
      release-branch:
        description: "Branch to release from"
        required: false
        default: "main"

jobs:
  release:
    env:
      GITHUB_ACTOR: ${{ secrets.ATALA_GITHUB_ACTOR }}
      GITHUB_TOKEN: ${{ secrets.ATALA_GITHUB_TOKEN }}
      SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.ATALA_GITHUB_TOKEN }}
          ref: ${{ github.event.inputs.release-branch }}
          fetch-depth: 0
      - name: Setup Java and Scala
        uses: olafurpg/setup-scala@v13
        with:
          java-version: openjdk@1.11
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"
      - uses: crazy-max/ghaction-import-gpg@v3
        id: import_gpg
        with:
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          git-user-signingkey: true
          git-commit-gpgsign: true
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.ATALA_GITHUB_ACTOR }}
          password: ${{ secrets.ATALA_GITHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Release
        env:
          GIT_AUTHOR_EMAIL: ${{ steps.import_gpg.outputs.email }}
          GIT_COMMITTER_EMAIL: ${{ steps.import_gpg.outputs.email }}
          GIT_AUTHOR_NAME: ${{ steps.import_gpg.outputs.name }}
          GIT_COMMITTER_NAME: ${{ steps.import_gpg.outputs.name }}
        run: |
          npm install
          npx semantic-release
