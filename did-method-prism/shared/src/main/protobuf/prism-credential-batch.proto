syntax = "proto3";

import "scalapb/scalapb.proto";
option (scalapb.options) = {
  // scope: FILE
  package_name: "proto.prism"
  flat_package: true
  // single_file: true
  java_conversions: false
  // import: "com.thesamet.pb.MyType"
  // import: "com.thesamet.other._"
  // preamble: "sealed trait BaseMessage"
  // preamble: "sealed trait CommonMessage"
  lenses: false
  getters: false
  retain_source_code_info: false
  no_default_values_in_constructor: true //false
  // preserve_unknown_fields: false
  // enum_value_naming: CAMEL_CASE
  // enum_strip_prefix: false
  // bytes_type: "scodec.bits.ByteVector"
  scala3_sources: true
  // public_constructor_parameters: false
};


// Represents a credential's batch.
// Specifies the data to issue a credential batch.
message IssueCredentialBatchOperation {
    CredentialBatchData credential_batch_data = 1; // The actual credential batch data.
  }
  // Check the protocol docs to understand it.
  message CredentialBatchData {
    string issuer_did = 1; // The DID suffix that issues the credential's batch.
    bytes merkle_root = 2; // The Merkle root for the credential's batch.
  }
  
  
  // Specifies the credentials to revoke (the whole batch, or just a subset of it).
  message RevokeCredentialsOperation {
    bytes previous_operation_hash = 1; // The hash of the operation that issued the batch.
    string credential_batch_id = 2; // The corresponding batch ID, as returned in IssueCredentialBatchResponse.
    repeated bytes credentials_to_revoke = 3; // The hashes of the credentials to revoke. If empty, the full batch is revoked.
  }